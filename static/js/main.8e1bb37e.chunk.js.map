{"version":3,"sources":["components/Texture.js","components/SaveMap.js","components/Box.js","components/Maps.js","components/Navbar.js","components/Collection.js","App.js","index.js"],"names":["DefaultScale","Vector3","BiggerScale","SpinningBox","props","boxRef","useRef","useState","clicked","setClicked","useClick","setHovered","useHover","useBeforeRender","scene","current","deltaTimeInMillis","getEngine","getDeltaTime","rotation","x","Math","PI","y","name","ref","size","position","scaling","backFaceCulling","url","assignTo","hasAlpha","Texture","antialias","adaptToDeviceRatio","width","height","canvasId","alpha","beta","radius","target","Zero","direction","Up","intensity","diffuse","Color3","White","specular","groundColor","color","FromHexString","hoveredColor","SaveMap","setName","alert","useAlert","onSubmit","e","preventDefault","map","axios","post","process","then","res","closeModal","show","timeout","type","catch","err","className","required","value","placeholder","onChange","customStyles","content","top","left","right","bottom","marginRight","paddingLeft","transform","Modal","setAppElement","Box","React","modalIsOpen","setIsOpen","onClick","isOpen","onRequestClose","style","id","delete","updateMaps","MAPBOX_TOKEN","Maps","latitude","longitude","zoom","viewport","setViewport","staticURL","mapRef","handleViewportChange","useCallback","newViewport","handleGeocoderViewportChange","transitionDuration","mapStyle","onViewportChange","mapboxApiAccessToken","Navbar","href","Collection","maps","setMaps","getCollection","a","get","data","useEffect","m","src","alt","updatedMaps","filter","_id","App","basename","BASEURL","path","exact","component","ReactDOM","render","template","AlertTemplate","offset","transition","document","getElementById"],"mappings":"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","file":"static/js/main.8e1bb37e.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { Engine, Scene, useBeforeRender, useClick, useHover } from 'react-babylonjs'\nimport { Vector3, Color3 } from '@babylonjs/core/Maths/math'\n\nconst DefaultScale = new Vector3(1, 1, 1);\nconst BiggerScale = new Vector3(1.25, 1.25, 1.25);\n\nconst SpinningBox = (props) => {\n    const boxRef = useRef(null);\n  \n    const [clicked, setClicked] = useState(false);\n    useClick(\n      () => setClicked(clicked => !clicked),\n      boxRef\n    );\n  \n    const [hovered, setHovered] = useState(false);\n  \n    useHover(\n      () => setHovered(true),\n      () => setHovered(false),\n      boxRef\n    );\n  \n    const rpm = 7;\n    useBeforeRender((scene) => {\n      if (boxRef.current) {\n        // Delta time smoothes the animation.\n        var deltaTimeInMillis = scene.getEngine().getDeltaTime();\n        boxRef.current.rotation.x += ((rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000));\n        boxRef.current.rotation.y += ((rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000));\n      }\n    });\n\n    return (\n        <box name={props.name} \n        ref={boxRef} \n        size={1} \n        position={props.position} \n        scaling={clicked ? BiggerScale : DefaultScale}>         \n            <standardMaterial name='imageBox' backFaceCulling={false}>\n                <texture url={props.url} assignTo=\"diffuseTexture\" hasAlpha={true} />\n            </standardMaterial>\n        </box>\n    );\n}\n\nexport const Texture = (url) => {\n    return (\n        <div>\n            <Engine antialias \n            adaptToDeviceRatio \n            width=\"500px\"\n            height=\"500px\"\n            canvasId='babylonJS'>\n            <Scene>\n                <arcRotateCamera\n                name='Camera'\n                alpha={3 * Math.PI / 2}\n                beta={Math.PI / 2}\n                radius={3}\n                target={Vector3.Zero()}\n                />\n                <hemisphericLight\n                name='light1'\n                direction={Vector3.Up()}\n                intensity={0.7}\n                diffuse={Color3.White()}\n                specular={Color3.White()}\n                groundColor={Color3.White()}\n                />\n                <SpinningBox \n                name='imageBox' \n                position={new Vector3(0, 0, 0)}\n                color={Color3.FromHexString('#EEB5EB')} \n                hoveredColor={Color3.FromHexString('#C26DBC')}\n                url={url[\"url\"]}\n                />\n            </Scene>\n            </Engine>\n        </div>\n    )\n}","import React , { useState } from 'react'\nimport axios from 'axios';\nimport { useAlert } from 'react-alert'\n\nexport const SaveMap = (props) => {\n    const [name, setName] = useState('');\n    const alert = useAlert();\n    const BASEURL = process.env.REACT_APP_BASEURL\n\n    function onSubmit(e) {\n        e.preventDefault()\n        const map = {\n          name: name,\n          url: props.url\n        } \n        axios.post(`${BASEURL}/map/add`,map)\n        .then(res => {\n            props.closeModal()\n            setName('');\n          alert.show('Map Saved Successfully!', {\n            timeout: 5000,\n            type: 'success',\n          });\n        })\n        .catch(err => {\n          alert.show('Error Occured!', {\n            timeout: 5000,\n            type: 'error',\n          });\n        })\n  \n      }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <div className=\"form-group\">\n                <label>Name: </label>\n                <input type=\"text\" required className=\"form-control\" value={name} placeholder=\"Enter name\" onChange={(e) => setName(e.target.value)} />\n            </div>\n            <div className=\"form-group\">\n                <input type=\"submit\" value=\"Save Map\" className=\"btn btn-primary mt-4 mx-auto\" />  \n            </div>\n        </form> \n    )\n}\n","import React from 'react';\nimport Modal from 'react-modal';\nimport { Texture } from './Texture';\nimport { SaveMap } from './SaveMap';\nimport axios from 'axios';\n\nconst customStyles = {\n  content : {\n    top                   : '15%',\n    left                  : '50%',\n    right                 : '70%',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    paddingLeft           : '35px',\n    transform             : 'translate(-50%, 0)',\n  }\n};\n\nModal.setAppElement(\"#root\")\nconst BASEURL = process.env.REACT_APP_BASEURL\n\nfunction Box(props){\n    const [modalIsOpen,setIsOpen] = React.useState(false);\n\n    function openModal() {\n      setIsOpen(true);\n    }\n  \n    function closeModal(){\n      setIsOpen(false);\n    }\n\n    const deleteMap = (id) => {\n      axios.delete(`${BASEURL}/map/${id}`)\n      .then(res => {\n        setIsOpen(false);\n        props.updateMaps(id);\n      })\n  }\n\n    return (\n        <div>\n         <button className=\"btn btn-success btn-lg\" onClick={openModal}>3D Preview</button>\n          <Modal\n            isOpen={modalIsOpen}\n            onRequestClose={closeModal}\n            style={customStyles}\n          >\n            <h4>3-D Map Preview</h4>\n              <Texture url={props.url} />\n              {props.show ? <SaveMap url={props.url} closeModal={closeModal} /> : <>\n              <h3>{props.name}</h3>\n              <button className=\"btn btn-danger\" onClick={() => deleteMap(props.id)}>Delete Map</button>\n              </>\n              }\n          </Modal>\n        </div>\n      );\n  }\n  \nexport default Box;","import 'mapbox-gl/dist/mapbox-gl.css'\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css'\nimport React, { useState, useRef, useCallback } from 'react'\nimport MapGL from 'react-map-gl'\nimport Geocoder from 'react-map-gl-geocoder'\nimport Box from './Box'\n\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPTOKEN\n\nconst Maps = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 37.7577,\n    longitude: -122.4376,\n    zoom: 8\n  });\n\n  const staticURL = `https://api.mapbox.com/styles/v1/mapbox/streets-v11/static/${viewport[\"longitude\"]},${viewport[\"latitude\"]},${viewport[\"zoom\"]}/800x800?access_token=${MAPBOX_TOKEN}`\n\n  const mapRef = useRef();\n  const handleViewportChange = useCallback(\n    (newViewport) => setViewport(newViewport),\n    []\n  );\n \n  const handleGeocoderViewportChange = useCallback(\n    (newViewport) => {\n      const geocoderDefaultOverrides = { transitionDuration: 1000 };\n \n      return handleViewportChange({\n        ...newViewport,\n        ...geocoderDefaultOverrides\n      });\n    },\n    []\n  );\n\n  return (\n    <div className=\"mapBox\" id=\"map\">\n      <MapGL\n        ref={mapRef}\n        {...viewport}\n        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n        width=\"700px\"\n        height=\"700px\"\n        onViewportChange={handleViewportChange}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n      >\n        <Geocoder\n          mapRef={mapRef}\n          onViewportChange={handleGeocoderViewportChange}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          position=\"top-right\"\n        />\n      </MapGL>\n      <div className=\"mapBox_control\">\n        <Box url={staticURL} show={true} />\n      </div>\n    </div>\n  );\n};\n \nexport default Maps;\n","import React from 'react'\n\nexport const Navbar = () => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top shadow\">\n                <a className=\"navbar-brand\" href=\"/\">Map 3D</a>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"/saved\">collection</a>\n                    </li>\n                    </ul>\n                </div>\n        </nav>\n    )\n}\n","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport Box from './Box';\n\nconst BASEURL = process.env.REACT_APP_BASEURL\n\nexport const Collection = () => {\n    const [maps, setMaps] = useState([]);\n\n    const getCollection = async () => {\n        axios.get(`${BASEURL}/map`)\n        .then(res => {\n            setMaps(res.data)\n        })\n    }\n\n    useEffect(() => {\n        getCollection();\n    }, [])\n\n    const updateMaps = (id) => {\n        const updatedMaps = [...maps].filter(map => (map[\"_id\"] != id))\n        setMaps(updatedMaps)\n    }\n\n    return (\n        <div className=\"collection\">\n            <h2>Saved Maps</h2>\n            <div className=\"row\">\n                {maps.map((m) => (\n                <div key={m._id} className=\"col-md-3 mapDisplayWrapper\">\n                    <div  className=\"mapDisplay\">\n                        <img src={m.url} alt=\"\" className=\"mapDisplay_image\"/>\n                        <h5>{m.name}</h5>\n                    </div>\n                    <div className=\"mapDisplay_control\">\n                        <Box url={m.url} name={m.name} updateMaps={() => updateMaps(m._id)} id={m._id} show={false}/>\n                    </div>\n                </div>\n                ))}\n            </div >\n        </div>\n    )\n}\n","import './App.css';\nimport Maps from './components/Maps';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar } from './components/Navbar';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Collection } from './components/Collection';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.BASEURL}>\n        <Navbar />\n        <Route path=\"/\" exact component={Maps} />\n        <Route path=\"/saved\" component={Collection} />\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\nconst options = {\n  position: 'top center',\n  timeout: 5000,\n  offset: '60px',\n  transition: 'scale',\n}\n\nReactDOM.render(\n  <AlertProvider template={AlertTemplate} {...options}>\n    <App />\n  </AlertProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}